name: Deploy to AKS

on:
  push:
    branches: [ develop ]
    paths: 
      - 'k8s/**'
      - 'terraform/**'
  workflow_dispatch:

env:
  RESOURCE_GROUP: decentralbet-rg
  CLUSTER_NAME: decentralbet-aks
  LOCATION: eastus

jobs:
  deploy:
    runs-on: self-hosted
    environment: production

    steps:
      - uses: actions/checkout@v4

      - name: Azure login
        run: az login --identity

      - name: Terraform init and import
        run: |
          cd terraform
          terraform init
          
          # Import existing resources if they exist
          if az group show --name ${{ env.RESOURCE_GROUP }} >/dev/null 2>&1; then
            terraform import azurerm_resource_group.main /subscriptions/$(az account show --query id -o tsv)/resourceGroups/${{ env.RESOURCE_GROUP }} || true
          fi
          
          if az aks show --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.CLUSTER_NAME }} >/dev/null 2>&1; then
            terraform import azurerm_kubernetes_cluster.main /subscriptions/$(az account show --query id -o tsv)/resourcegroups/${{ env.RESOURCE_GROUP }}/providers/Microsoft.ContainerService/managedClusters/${{ env.CLUSTER_NAME }} || true
          fi

      - name: Terraform apply
        run: |
          cd terraform
          terraform plan -out=tfplan
          terraform apply -auto-approve tfplan

      - name: Get AKS credentials
        run: |
          az aks get-credentials \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.CLUSTER_NAME }} \
            --admin \
            --overwrite-existing

      - name: Deploy
        run: |
          kubectl apply -f k8s/
          sleep 30
          kubectl get all -n decentralbet
          if kubectl get deployment frontend -n decentralbet 2>/dev/null; then
            kubectl wait --for=condition=available --timeout=300s deployment/frontend -n decentralbet
          fi
          if kubectl get deployment backend -n decentralbet 2>/dev/null; then
            kubectl wait --for=condition=available --timeout=300s deployment/backend -n decentralbet
          fi

      - name: Status
        run: |
          kubectl get all -n decentralbet
          kubectl get services -n decentralbet
          kubectl get pods -n decentralbet
