version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: decentralbet-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: decentralbet
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - decentralbet-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: decentralbet-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - decentralbet-network

  # Backend API Service
  backend:
    build:
      context: ./backend
      target: dev
    container_name: decentralbet-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/decentralbet?authSource=admin
      REDIS_URL: redis://:redis123@redis:6379
      JWT_SECRET: your-jwt-secret-key-change-in-production
      ETHEREUM_RPC_URL: http://host.docker.internal:8545
      PRIVATE_KEY: your-private-key-here
      CONTRACT_ADDRESS: your-contract-address-here
      CORS_ORIGIN: http://localhost:3000
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - mongodb
      - redis
    networks:
      - decentralbet-network

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      target: dev
    container_name: decentralbet-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:5000/api/v1
      NEXT_PUBLIC_WS_URL: ws://localhost:5000
      NEXT_PUBLIC_CHAIN_ID: 1337
      NEXT_PUBLIC_ETHEREUM_RPC_URL: http://localhost:8545
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - decentralbet-network

  # Hardhat Local Blockchain (Development)
  hardhat:
    build:
      context: ./smart-contracts
      dockerfile: Dockerfile.hardhat
    container_name: decentralbet-hardhat
    restart: unless-stopped
    ports:
      - "8545:8545"
    environment:
      NODE_ENV: development
    volumes:
      - ./smart-contracts:/app
      - /app/node_modules
    networks:
      - decentralbet-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: decentralbet-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - decentralbet-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  decentralbet-network:
    driver: bridge
